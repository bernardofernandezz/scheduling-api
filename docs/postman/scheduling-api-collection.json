{
  "info": {
    "name": "Scheduling API",
    "description": "Collection for testing the Scheduling API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "123456"
  },
  "item": [
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "health"
              ]
            },
            "description": "Check the health status of the API"
          },
          "response": [
            {
              "name": "Health Check - Success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/health",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "health"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"status\": \"UP\",\n  \"time\": \"2025-05-24T00:00:00Z\",\n  \"mode\": \"debug\",\n  \"version\": \"1.0.0\"\n}"
            }
          ]
        },
        {
          "name": "Readiness Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/ready",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "ready"
              ]
            },
            "description": "Check if the API is ready to accept requests"
          },
          "response": [
            {
              "name": "Readiness Check - Success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/ready",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "ready"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"status\": \"UP\",\n  \"database\": \"connected\"\n}"
            }
          ]
        }
      ],
      "description": "Endpoints for checking the health and readiness of the API"
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    pm.expect(jsonData.user).to.have.property('id');",
                  "    pm.expect(jsonData.user).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"Test User\",\n  \"role\": \"supplier\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            },
            "description": "Register a new user in the system"
          },
          "response": [
            {
              "name": "Register - Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"Test User\",\n  \"role\": \"supplier\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/auth/register",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "register"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"user\": {\n    \"id\": 1,\n    \"email\": \"test@example.com\",\n    \"name\": \"Test User\",\n    \"role\": \"supplier\",\n    \"created_at\": \"2025-05-24T00:00:00Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token and user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.expect(jsonData).to.have.property('refresh_token');",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    ",
                  "    // Set token in environment variables",
                  "    pm.environment.set(\"token\", jsonData.token);",
                  "    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
                  "    pm.environment.set(\"user_id\", jsonData.user.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login to get authentication token"
          },
          "response": [
            {
              "name": "Login - Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/auth/login",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "login"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": 1,\n    \"email\": \"test@example.com\",\n    \"name\": \"Test User\",\n    \"role\": \"supplier\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has new token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.expect(jsonData).to.have.property('refresh_token');",
                  "    ",
                  "    // Update token in environment variables",
                  "    pm.environment.set(\"token\", jsonData.token);",
                  "    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/refresh",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "refresh"
              ]
            },
            "description": "Refresh authentication token"
          },
          "response": [
            {
              "name": "Refresh Token - Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/auth/refresh",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "refresh"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}"
            }
          ]
        },
        {
          "name": "Request Password Reset",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/password-reset",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "password-reset"
              ]
            },
            "description": "Request a password reset link"
          },
          "response": [
            {
              "name": "Request Password Reset - Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"test@example.com\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/auth/password-reset",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "password-reset"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"message\": \"Password reset instructions sent to your email\"\n}"
            }
          ]
        }
      ],
      "description": "Endpoints for user authentication and account management"
    },
    {
      "name": "Appointments",
      "item": [
        {
          "name": "Create Appointment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has appointment data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('appointment');",
                  "    pm.expect(jsonData.appointment).to.have.property('id');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"supplier_id\": 1,\n  \"employee_id\": 2,\n  \"operation_id\": 3,\n  \"product_id\": 4,\n  \"scheduled_start\": \"2025-06-01T10:00:00Z\",\n  \"scheduled_end\": \"2025-06-01T11:00:00Z\",\n  \"notes\": \"Test appointment\",\n  \"quantity_to_deliver\": 100\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/appointments",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "appointments"
              ]
            },
            "description": "Create a new appointment"
          },
          "response": [
            {
              "name": "Create Appointment - Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"supplier_id\": 1,\n  \"employee_id\": 2,\n  \"operation_id\": 3,\n  \"product_id\": 4,\n  \"scheduled_start\": \"2025-06-01T10:00:00Z\",\n  \"scheduled_end\": \"2025-06-01T11:00:00Z\",\n  \"notes\": \"Test appointment\",\n  \"quantity_to_deliver\": 100\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/appointments",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "appointments"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"appointment\": {\n    \"id\": 1,\n    \"supplier_id\": 1,\n    \"employee_id\": 2,\n    \"operation_id\": 3,\n    \"product_id\": 4,\n    \"scheduled_start\": \"2025-06-01T10:00:00Z\",\n    \"scheduled_end\": \"2025-06-01T11:00:00Z\",\n    \"notes\": \"Test appointment\",\n    \"quantity_to_deliver\": 100,\n    \"status\": \"pending\",\n    \"created_at\": \"2025-05-24T00:00:00Z\",\n    \"updated_at\": \"2025-05-24T00:00:00Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Appointment by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has appointment data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('appointment');",
                  "    pm.expect(jsonData.appointment).to.have.property('id');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/appointments/1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "appointments",
                "1"
              ]
            },
            "description": "Get appointment details by ID"
          },
          "response": [
            {
              "name": "Get Appointment - Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/appointments/1",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "appointments",
                    "1"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"appointment\": {\n    \"id\": 1,\n    \"supplier_id\": 1,\n    \"employee_id\": 2,\n    \"operation_id\": 3,\n    \"product_id\": 4,\n    \"scheduled_start\": \"2025-06-01T10:00:00Z\",\n    \"scheduled_end\": \"2025-06-01T11:00:00Z\",\n    \"notes\": \"Test appointment\",\n    \"quantity_to_deliver\": 100,\n    \"status\": \"pending\",\n    \"created_at\": \"2025-05-24T00:00:00Z\",\n    \"updated_at\": \"2025-05-24T00:00:00Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update Appointment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has updated appointment data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('appointment');",
                  "    pm.expect(jsonData.appointment).to.have.property('notes', 'Updated test appointment');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notes\": \"Updated test appointment\",\n  \"quantity_to_deliver\": 150\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/appointments/1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "appointments",
                "1"
              ]
            },
            "description": "Update an existing appointment"
          },
          "response": [
            {
              "name": "Update Appointment - Success",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"notes\": \"Updated test appointment\",\n  \"quantity_to_deliver\": 150\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/appointments/1",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "appointments",
                    "1"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"appointment\": {\n    \"id\": 1,\n    \"supplier_id\": 1,\n    \"employee_id\": 2,\n    \"operation_id\": 3,\n    \"product_id\": 4,\n    \"scheduled_start\": \"2025-06-01T10:00:00Z\",\n    \"scheduled_end\": \"2025-06-01T11:00:00Z\",\n    \"notes\": \"Updated test appointment\",\n    \"quantity_to_deliver\": 150,\n    \"status\": \"pending\",\n    \"created_at\": \"2025-05-24T00:00:00Z\",\n    \"updated_at\": \"2025-05-24T00:00:00Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update Appointment Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has updated status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('appointment');",
                  "    pm.expect(jsonData.appointment).to.have.property('status', 'confirmed');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\",\n  \"reason\": \"Confirmed by employee\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/appointments/1/status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "appointments",
                "1",
                "status"
              ]
            },
            "description": "Update the status of an appointment"
          },
          "response": [
            {
              "name": "Update Status - Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"confirmed\",\n  \"reason\": \"Confirmed by employee\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/appointments/1/status",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "appointments",
                    "1",
                    "status"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"appointment\": {\n    \"id\": 1,\n    \"supplier_id\": 1,\n    \"employee_id\": 2,\n    \"operation_id\": 3,\n    \"product_id\": 4,\n    \"scheduled_start\": \"2025-06-01T10:00:00Z\",\n    \"scheduled_end\": \"2025-06-01T11:00:00Z\",\n    \"notes\": \"Updated test appointment\",\n    \"quantity_to_deliver\": 150,\n    \"status\": \"confirmed\",\n    \"created_at\": \"2025-05-24T00:00:00Z\",\n    \"updated_at\": \"2025-05-24T00:00:00Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "List Appointments",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has appointments list\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('appointments');",
                  "    pm.expect(jsonData).to.have.property('total');",
                  "    pm.expect(jsonData).to.have.property('page');",
                  "    pm.expect(jsonData).to.have.property('limit');",
                  "});"
                ],
                "type

