version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scheduling_api
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - SERVER_ADDRESS=:8080
      - GIN_MODE=debug
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=scheduling_db
      - DB_SSLMODE=disable
      - JWT_SECRET=development-jwt-secret-change-in-production
      - JWT_EXPIRE_HOURS=24
      - CORS_ALLOWED_ORIGINS=*
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - scheduling-network

  db:
    image: postgres:15-alpine
    container_name: scheduling_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=scheduling_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - scheduling-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: scheduling_pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - scheduling-network

volumes:
  postgres_data:

networks:
  scheduling-network:
    driver: bridge

